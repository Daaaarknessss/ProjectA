// <auto-generated />
using BusStop.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BusStop.Migrations
{
    [DbContext(typeof(BusStopContext))]
    partial class BusStopContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("BusStop.Models.Allocate", b =>
                {
                    b.Property<int>("allocateID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("allocateID"));

                    b.Property<int>("EmployeeID")
                        .HasColumnType("int");

                    b.Property<int>("RouteeID")
                        .HasColumnType("int");

                    b.Property<string>("VehicleID")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("allocateID");

                    b.HasIndex("EmployeeID");

                    b.HasIndex("RouteeID");

                    b.HasIndex("VehicleID");

                    b.ToTable("Allocate");
                });

            modelBuilder.Entity("BusStop.Models.Employee", b =>
                {
                    b.Property<int>("EmployeeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EmployeeId"));

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<string>("ContactNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmployeeName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Location")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RouteId")
                        .HasColumnType("int");

                    b.HasKey("EmployeeId");

                    b.HasIndex("RouteId");

                    b.ToTable("Employee");
                });

            modelBuilder.Entity("BusStop.Models.Routee", b =>
                {
                    b.Property<int>("RouteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RouteId"));

                    b.Property<string>("Stop1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Stop2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Stop3")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("RouteId");

                    b.ToTable("Routee");
                });

            modelBuilder.Entity("BusStop.Models.Vehicle", b =>
                {
                    b.Property<string>("VehicleId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AvailableSeats")
                        .HasColumnType("int");

                    b.Property<int>("Capacity")
                        .HasColumnType("int");

                    b.Property<bool>("IsOperable")
                        .HasColumnType("bit");

                    b.Property<int>("RouteId")
                        .HasColumnType("int");

                    b.HasKey("VehicleId");

                    b.HasIndex("RouteId")
                        .IsUnique();

                    b.ToTable("Vehicle");
                });

            modelBuilder.Entity("BusStop.Models.Allocate", b =>
                {
                    b.HasOne("BusStop.Models.Employee", "Employee")
                        .WithMany()
                        .HasForeignKey("EmployeeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BusStop.Models.Routee", "Routee")
                        .WithMany()
                        .HasForeignKey("RouteeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BusStop.Models.Vehicle", "Vehicle")
                        .WithMany()
                        .HasForeignKey("VehicleID");

                    b.Navigation("Employee");

                    b.Navigation("Routee");

                    b.Navigation("Vehicle");
                });

            modelBuilder.Entity("BusStop.Models.Employee", b =>
                {
                    b.HasOne("BusStop.Models.Routee", "Routee")
                        .WithMany()
                        .HasForeignKey("RouteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Routee");
                });

            modelBuilder.Entity("BusStop.Models.Vehicle", b =>
                {
                    b.HasOne("BusStop.Models.Routee", "Routee")
                        .WithOne("Vehicle")
                        .HasForeignKey("BusStop.Models.Vehicle", "RouteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Routee");
                });

            modelBuilder.Entity("BusStop.Models.Routee", b =>
                {
                    b.Navigation("Vehicle");
                });
#pragma warning restore 612, 618
        }
    }
}
